
    // model TopicsOnPosts {
//   topic      Topic  @relation(fields: [topic_name], references: [name])
//   topic_name String
//   post       Post   @relation(fields: [post_id], references: [id])
//   post_id    String
//   @@id([topic_name, post_id])
// }

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum From {
  zenn
  me
  qiita
}

model User {
  uid       Int      @id @default(autoincrement())
  id        String   @unique
  email     String   @unique
  name      String
  password  String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile?
  posts     Post[]
}

model Post {
  uid       Int      @id @default(autoincrement())
  id        String   @unique
  topics    Topic[]
  title     String
  from      From     @default(me)
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId  String   @unique
  body      String
}

model Profile {
  uid     Int     @id @default(autoincrement())
  twitter String?
  zenn    String?
  qiita   String?
  link    String?
  avatar  String?
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  String  @unique
}

model Topic {
  uid   Int    @id @default(autoincrement())
  name  String @unique
  icon  String
  posts Post[]
}

  